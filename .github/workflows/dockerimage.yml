name: "Release, build, push and deploy"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - "main"

env:
  IMAGE_REGISTRY: registry.hub.docker.com
  IMAGE_REPOSITORY: bateau
  IMAGE_NAME: ytdlp

permissions:
  contents: read

jobs:
  release:
    name: release
    uses: nrkno/github-workflow-semantic-release/.github/workflows/workflow.yaml@v3.1.2
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    with:
      runs-on: ubuntu-latest
      release-enabled: true
      lint-enabled: false
  build:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build_push.outputs.digest }}
    needs: release
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: refs/tags/${{ needs.release.outputs.git-tag }}
          fetch-depth: 0
      - uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Build and push
        id: build_push
        uses: docker/build-push-action@v6.15.0
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max,ignore-error=true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ needs.release.outputs.release-version }}
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
  deploy:
    runs-on: [ubuntu-latest]
    needs: [release, build ]
    permissions:
      id-token: write
      actions: read
      contents: read
    steps:
      # Checkout repo code
      - name: Checkout repo with tag
        uses: actions/checkout@v4.2.2
        if: ${{ needs.release.outputs.new-release-published == 'true' }}
        with:
          ref: refs/tags/${{ needs.release.outputs.git-tag }}
      - name: Checkout repo without tag
        uses: actions/checkout@v4.2.2
        if: ${{ needs.release.outputs.new-release-published != 'true' }}
      - name: Kubeconfig context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_KONFIG }}
      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_ACTION_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_ACTION_CLIENT_SECRET }}
          tags: tag:github
      # Do the deploy on K8s cluster set in the above context
      - name: Deply manifests to k8s
        uses: azure/k8s-deploy@v5
        timeout-minutes: 15
        with:
          action: deploy
          namespace: seashell
          annotate-namespace: false
          strategy: basic
          manifests: |
            kubernetes-manifests/cronjob.yaml
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ needs.release.outputs.git-tag }}@${{ needs.build.outputs.digest }}
