name: "Release build and push"

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - "main"

env:
  IMAGE_REGISTRY: registry.hub.docker.com
  IMAGE_REPOSITORY: bateau
  IMAGE_NAME: ytdlp
  GITHUB_REPO_NAME: yt-dlp

permissions:
  contents: read

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build_push.outputs.digest }}
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Build and push
        id: build_push
        uses: docker/build-push-action@v5.0.0
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max,ignore-error=true
          tags: |
            ${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
            ${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
      - uses: azure/setup-kubectl@v3.2
        with:
          version: '1.28.2'
      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_ACTION_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_ACTION_CLIENT_SECRET }}
      - uses: Azure/k8s-set-context@v2
        with:
            kubeconfig: ${{ secrets.K8S_KONFIG }}
      - uses: Azure/k8s-deploy@v4
        with:
            action: deploy
            manifests: |
              manifests/cronjob.yaml
            images: |
              ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}@${{ steps.build_push.outputs.digest }}
